/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

typedef pair<int, int> pii;
class Solution {
   public:
    int totalSteps(vector<int>& nums) {
        int n = nums.size();
        vector<int> f(n + 1);
        iota(f.begin(), f.end(), 0);

        function<int(int)> find = [&](int u) {
            return u == f[u] ? u : f[u] = find(f[u]);
        };

        set<int> S;
        for (int i = 0; i < n - 1; i++) {
            if (nums[i] > nums[i + 1]) {
                S.insert(i);
            }
        }
        int ans = 0;

        while (!S.empty()) {
            debug(S);
            set<int> del;
            bool flag = false;
            for (set<int>::iterator itor = S.begin(); itor != S.end();) {
                int idx = *itor;
                int nxt = idx + 1;
                int fnxt = find(nxt);
                debug(idx, fnxt);
                if (fnxt <= n - 1 && nums[idx] > nums[fnxt]) {
                    del.insert(fnxt);
                    f[fnxt] = find(fnxt + 1);
                    itor++;
                    flag = true;
                } else {
                    itor++;
                }
            }
            for (auto it : del) {
                S.erase(it);
            }
            debug(flag);
            if (flag)
                ans++;
            else {
                break;
            }
        }

        return ans;
    }
};