{
    "class_name": "SmallestInfiniteSet",
    "default_code": "class SmallestInfiniteSet {\npublic:\n    SmallestInfiniteSet() {\n\n    }\n    \n    int popSmallest() {\n\n    }\n    \n    void addBack(int num) {\n\n    }\n};\n\n/**\n * Your SmallestInfiniteSet object will be instantiated and called as such:\n * SmallestInfiniteSet* obj = new SmallestInfiniteSet();\n * int param_1 = obj->popSmallest();\n * obj->addBack(num);\n */",
    "functions": [
        {
            "input_params": [
                ""
            ],
            "is_constructor": true,
            "location": 2,
            "name": "SmallestInfiniteSet",
            "output_params": ""
        },
        {
            "input_params": [
                ""
            ],
            "is_constructor": false,
            "location": 6,
            "name": "popSmallest",
            "output_params": "int"
        },
        {
            "input_params": [
                "int num"
            ],
            "is_constructor": false,
            "location": 10,
            "name": "addBack",
            "output_params": "void"
        }
    ],
    "id": "1",
    "is_func_problem": false,
    "language": "cpp",
    "openURL": true,
    "sample_ins": [
        [
            "[\"SmallestInfiniteSet\", \"addBack\", \"popSmallest\", \"popSmallest\", \"popSmallest\", \"addBack\", \"popSmallest\", \"popSmallest\", \"popSmallest\"]",
            "[[], [2], [], [], [], [1], [], [], []]"
        ]
    ],
    "sample_outs": [
        [
            "[null, null, 1, 2, 3, null, 1, 4, 5]"
        ]
    ],
    "url": "https://leetcode.cn/contest/weekly-contest-301/problems/smallest-number-in-infinite-set/"
}