/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

typedef pair<int, int> pii;
class Solution {
   public:
    int mostBooked(int n, vector<vector<int>>& meet) {
        // n = 3;
        // meet = {{39, 49}, {28, 39}, {9, 29}, {10, 36}, {22, 47}, {2, 3}, {4, 49}, {46, 50}, {45, 50}, {17, 33}};
        sort(meet.begin(), meet.end());
        int m = meet.size();
        debug(meet);

        set<int> S;
        for (int i = 0; i < n; i++) {
            S.insert(i);
        }
        set<pii> S2;
        int now = 0;
        vector<int> num(n);
        while (now < m) {
            int s = meet[now][0], e = meet[now][1];
            int len = e - s;

            while (S2.size() && S2.begin()->first <= s) {
                S.insert(S2.begin()->second);
                S2.erase(S2.begin());
            }
            if (S.size()) {
                int c = *S.begin();
                debug(now, c, s, len);
                S.erase(c);
                num[c]++;
                S2.insert({s + len, c});
            } else {
                auto it = *S2.begin();
                int c = it.second;
                s = it.first;
                S2.erase(it);
                num[c]++;
                debug(now, c, s, len);
                S2.insert({s + len, c});
            }
            now++;
        }
        debug(num);

        int ans = 0;
        for (int i = 1; i < n; i++) {
            if (num[ans] < num[i]) ans = i;
        }
        return ans;
    }
};