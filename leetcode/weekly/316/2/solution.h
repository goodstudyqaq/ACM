/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

class Solution {
   public:
    long long minCost(vector<int>& v, vector<int>& c) {
        int n = v.size();
        vector<pair<int, int>> V(n);
        for (int i = 0; i < n; i++) {
            V[i] = {v[i], c[i]};
        }
        sort(V.begin(), V.end());

        vector<long long> b(n), sumb(n), sumc(n);

        for (int i = 0; i < n; i++) {
            b[i] = 1LL * V[i].first * V[i].second;
            sumb[i] = b[i];
            if (i > 0) sumb[i] += sumb[i - 1];
            sumc[i] = V[i].second;
            if (i > 0) sumc[i] += sumc[i - 1];
        }

        long long res = numeric_limits<long long>::max() / 2;

        for (int i = 0; i < n; i++) {
            long long tmp = 0;

            if (i > 0) {
                tmp -= sumb[i - 1];
                tmp += sumc[i - 1] * V[i].first;
            }
            if (i < n - 1) {
                tmp += sumb[n - 1] - sumb[i];
                tmp -= (sumc[n - 1] - sumc[i]) * V[i].first;
            }
            res = min(res, tmp);
        }
        return res;
    }
};