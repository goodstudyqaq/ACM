/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

typedef pair<int, int> pii;

class Solution {
   public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) {
        int dir[4][2] = {0, 1, 1, 0, 0, -1, -1, 0};
        swap(n, m);
        vector V = vector(n, vector(m, -1));
        int x = 0, y = 0, idx = 0;

        while (head) {
            V[x][y] = head->val;
            int dx = dir[idx][0], dy = dir[idx][1];

            if (x + dx < 0 || x + dx >= n || y + dy < 0 || y + dy >= m || V[x + dx][y + dy] != -1) {
                idx = (idx + 1) % 4;
            }
            x = x + dir[idx][0];
            y = y + dir[idx][1];
            head = head->next;
        }

        return V;
    }
};