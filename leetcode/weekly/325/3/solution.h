/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

class Solution {
   public:
    int countPartitions(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> dp(k, 0);
        dp[0] = 1;
        const int mod = 1e9 + 7;

        long long sum = 0;
        for (int i = 0; i < n; i++) {
            sum += nums[i];
            for (int j = k - 1; j >= 0; j--) {
                if (dp[j] > 0 && j + nums[i] < k) {
                    (dp[j + nums[i]] += dp[j]) %= mod;
                }
            }
        }
        if (sum < 2 * k) return 0;
        int ans = 1;
        for (int i = 1; i <= n; i++) {
            ans = 1LL * ans * 2 % mod;
        }
        for (int i = 0; i < k; i++) {
            ans = (ans - 1LL * dp[i] * 2 % mod) % mod;
        }
        ans = (ans + mod) % mod;
        return ans;
    }
};