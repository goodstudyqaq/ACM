/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif
typedef pair<long long, long long> pll;

class Solution {
   public:
    long long minimumFuelCost(vector<vector<int>>& roads, int seats) {
        int n = roads.size() + 1;
        vector<vector<int>> V(n);
        for (int i = 0; i < roads.size(); i++) {
            int u = roads[i][0], v = roads[i][1];
            V[u].push_back(v);
            V[v].push_back(u);
        }
        long long res = 0;
        function<pll(int, int)> dfs = [&](int u, int pre) -> pll {
            pll ans = {0, 0};

            for (auto it : V[u]) {
                if (it == pre) continue;
                auto it2 = dfs(it, u);
                res += it2.first + (it2.second > 0);
                ans.first += it2.first;
                ans.second += it2.second;
            }
            ans.second++;
            ans.first += ans.second / seats;
            ans.second %= seats;
            return ans;
        };
        dfs(0, -1);
        return res;
    }
};