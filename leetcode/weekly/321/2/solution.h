/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
   public:
    ListNode* removeNodes(ListNode* head) {
        vector<int> val;

        auto now = head;
        while (now != NULL) {
            val.push_back(now->val);
            now = now->next;
        }

        vector<int> ans;
        int n = val.size();
        int big = -1;
        for (int i = n - 1; i >= 0; i--) {
            if (val[i] >= big) {
                ans.push_back(val[i]);
                big = val[i];
            }
        }

        reverse(ans.begin(), ans.end());

        vector<ListNode*> res;
        int m = ans.size();
        debug(ans);

        for (int i = 0; i < m; i++) {
            ListNode* tmp = new ListNode(ans[i]);
            res.push_back(tmp);
        }

        for (int i = 0; i < m - 1; i++) {
            res[i]->next = res[i + 1];
        }
        return res[0];
    }
};