/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

class Solution {
   public:
    int minimumRounds(vector<int>& tasks) {
        int n = tasks.size();
        sort(tasks.begin(), tasks.end());
        int now = 0;

        auto get_num = [&](int val) {
            int tmp = val % 3;
            if (tmp == 2) {
                return val / 3 + 1;
            } else if (tmp == 1) {
                return val / 3 + 1;
            } else {
                return val / 3;
            }
        };

        int res = 0;
        while (now < n) {
            int go = now;
            while (go < n && tasks[go] == tasks[now]) go++;
            int num = go - now;
            if (num == 1) return -1;
            res += get_num(num);
            now = go;
        }
        return res;
    }
};