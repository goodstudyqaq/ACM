{
    "class_name": "Allocator",
    "default_code": "class Allocator {\npublic:\n    Allocator(int n) {\n\n    }\n    \n    int allocate(int size, int mID) {\n\n    }\n    \n    int free(int mID) {\n\n    }\n};\n\n/**\n * Your Allocator object will be instantiated and called as such:\n * Allocator* obj = new Allocator(n);\n * int param_1 = obj->allocate(size,mID);\n * int param_2 = obj->free(mID);\n */",
    "functions": [
        {
            "input_params": [
                "int n"
            ],
            "is_constructor": true,
            "location": 2,
            "name": "Allocator",
            "output_params": ""
        },
        {
            "input_params": [
                "int size",
                "int mID"
            ],
            "is_constructor": false,
            "location": 6,
            "name": "allocate",
            "output_params": "int"
        },
        {
            "input_params": [
                "int mID"
            ],
            "is_constructor": false,
            "location": 10,
            "name": "free",
            "output_params": "int"
        }
    ],
    "id": "2",
    "is_func_problem": false,
    "language": "cpp",
    "openURL": true,
    "sample_ins": [
        [
            "[\"Allocator\", \"allocate\", \"allocate\", \"allocate\", \"free\", \"allocate\", \"allocate\", \"allocate\", \"free\", \"allocate\", \"free\"]",
            "[[10], [1, 1], [1, 2], [1, 3], [2], [3, 4], [1, 1], [1, 1], [1], [10, 2], [7]]"
        ]
    ],
    "sample_outs": [
        [
            "[null, 0, 1, 2, 1, 3, 1, 6, 3, -1, 0]"
        ]
    ],
    "url": "https://leetcode.cn/contest/weekly-contest-323/problems/design-memory-allocator/"
}