/*
Code generated by https://github.com/goodStudyTnT/leetcode-tester
*/

#if __has_include("../../utils/cpp/help.h")
#include "../../utils/cpp/help.h"
#endif

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

class Allocator {
   public:
    vector<int> vis;
    vector<int> sum;
    int n;
    Allocator(int _n) {
        n = _n;
        vis = vector<int>(n + 1, 0);
        sum = vector<int>(n + 1, 0);
    }

    int allocate(int size, int mID) {
        for (int i = size; i <= n; i++) {
            int tmp = sum[i] - sum[i - size];
            if (tmp > 0) continue;
            for (int j = i - size + 1; j <= i; j++) {
                vis[j] = mID;
            }
            for (int j = i - size + 1; j <= n; j++) {
                sum[j] = sum[j - 1] + vis[j];
            }
            return i - size;
        }
        return -1;
    }

    int free(int mID) {
        int cnt = 0;
        for (int i = 1; i <= n; i++) {
            if (vis[i] == mID) {
                vis[i] = 0;
                cnt++;
            }
            sum[i] = sum[i - 1] + vis[i];
        }
        return cnt;
    }
};

/**
 * Your Allocator object will be instantiated and called as such:
 * Allocator* obj = new Allocator(n);
 * int param_1 = obj->allocate(size,mID);
 * int param_2 = obj->free(mID);
 */